using System;

namespace ERPSupport.Model.Globa
{
    public class ConstStrings
    {
        public const string _K3_Sal_1 = "UPDATE T_SAL_ORDER SET FBUSINESSTYPE = 'NORMAL' WHERE FDATE > SYSDATE - 1 AND FSALEORGID = 477965 AND FBUSINESSTYPE = '1'";

        #region Procedure
        public const string _K3_P_1 = @"CREATE OR REPLACE PROCEDURE DM_CHECKMTLNAME
(
V_FNUMBER IN NVARCHAR2,
V_OUT OUT NVARCHAR2
)
AS

ICOUNT NUMBER;
BEGIN
    SELECT COUNT(*) INTO ICOUNT FROM T_BD_MATERIAL WHERE FDOCUMENTSTATUS = 'C' AND FFORBIDSTATUS = 'A' AND FNUMBER = V_FNUMBER;
    IF ICOUNT = 0 THEN
        /*V_OUT := 'None MTL';*/
        V_OUT := '没有该物料';
    ELSE
        SELECT COUNT(DISTINCT FNAME) INTO ICOUNT
        FROM T_BD_MATERIAL A
        INNER JOIN T_BD_MATERIAL_L AL ON A.FMATERIALID = AL.FMATERIALID AND AL.FLOCALEID = 2052
        WHERE A.FDOCUMENTSTATUS = 'C' AND A.FFORBIDSTATUS = 'A' AND A.FNUMBER = V_FNUMBER;

        IF ICOUNT = 1 THEN
        /*V_OUT := 'No Syn';*/
        V_OUT := '名称一致，无需同步';
        ELSE
        /*V_OUT := 'Can Syn';*/
        V_OUT := '物料待同步';
        END IF;
    END IF;
END;";

        public const string _K3_P_2 = @"CREATE OR REPLACE PROCEDURE DM_SYNMTL
(
V_FNUMBER IN NVARCHAR2,
V_OUT OUT NVARCHAR2
)
AS

ICOUNT NUMBER;
BEGIN
    SELECT COUNT(*) INTO ICOUNT FROM T_BD_MATERIAL WHERE FDOCUMENTSTATUS = 'C' AND FFORBIDSTATUS = 'A' AND FNUMBER = V_FNUMBER;
    IF ICOUNT = 0 THEN
        V_OUT := '同步失败:没有该物料';
    ELSE
        SELECT COUNT(DISTINCT FNAME) INTO ICOUNT
        FROM T_BD_MATERIAL A
        INNER JOIN T_BD_MATERIAL_L AL ON A.FMATERIALID = AL.FMATERIALID AND AL.FLOCALEID = 2052
        WHERE A.FDOCUMENTSTATUS = 'C' AND A.FFORBIDSTATUS = 'A' AND A.FNUMBER = V_FNUMBER;

        IF ICOUNT = 1 THEN
        V_OUT := '同步失败:无需同步';
        ELSE
        UPDATE T_BD_MATERIAL_L SET FNAME = (SELECT AL.FNAME FROM T_BD_MATERIAL A INNER JOIN T_BD_MATERIAL_L AL ON A.FMATERIALID = AL.FMATERIALID AND AL.FLOCALEID = 2052 WHERE A.FNUMBER = V_FNUMBER AND A.FUSEORGID = A.FCREATEORGID)
        WHERE FMATERIALID IN(SELECT FMATERIALID FROM T_BD_MATERIAL WHERE FNUMBER = V_FNUMBER AND FDOCUMENTSTATUS = 'C' AND FFORBIDSTATUS = 'A' AND FUSEORGID != FCREATEORGID);
        V_OUT := '同步成功';
        END IF;
    END IF;
END;";

        public const string _K3_P_3 = @"CREATE OR REPLACE PROCEDURE DM_SYNMTL_YM
(V_YM IN NVARCHAR2)
AS
BEGIN
    UPDATE T_BD_MATERIAL_L ML2 SET FNAME =
    (SELECT ML.FNAME FROM T_BD_MATERIAL_L ML,T_BD_MATERIAL M,T_BD_MATERIAL M2
    WHERE ML2.FMATERIALID = M2.FMATERIALID AND M2.FUSEORGID != M2.FCREATEORGID AND M2.FMASTERID = M.FMASTERID AND M.FUSEORGID = M.FCREATEORGID AND M.FMATERIALID = ML.FMATERIALID AND ML.FLOCALEID = 2052
    AND ML.FNAME != ML2.FNAME AND M2.FFORBIDSTATUS = 'A' AND M.FFORBIDSTATUS = 'A' AND M.FDOCUMENTSTATUS = 'C' AND TO_CHAR(M.FMODIFYDATE,'YYMM') = V_YM)
    WHERE ML2.FLOCALEID = 2052 AND EXISTS
    (SELECT 1 FROM T_BD_MATERIAL_L ML,T_BD_MATERIAL M,T_BD_MATERIAL M2
    WHERE ML2.FMATERIALID = M2.FMATERIALID AND M2.FUSEORGID != M2.FCREATEORGID AND M2.FMASTERID = M.FMASTERID AND M.FUSEORGID = M.FCREATEORGID AND M.FMATERIALID = ML.FMATERIALID AND ML.FLOCALEID = 2052
    AND ML.FNAME != ML2.FNAME AND M2.FFORBIDSTATUS = 'A' AND M.FFORBIDSTATUS = 'A' AND M.FDOCUMENTSTATUS = 'C' AND TO_CHAR(M.FMODIFYDATE,'YYMM') = V_YM);
END;";

        public const string _NO_P_1 = @"CREATE PROCEDURE [dbo].[DM_P_SynOrderPrice]
@OrgIds VARCHAR(2000) = '100505,979114'--组织
AS
SET NOCOUNT ON;

DECLARE @Sql VARCHAR(MAX)
BEGIN
	SELECT * INTO #tb FROM OPENQUERY(ERP_ORACLE,'SELECT O.FBILLNO,MTL2.FMATERIALID,F.FPRICE,OE.FENTRYID
	FROM T_SAL_ORDER O
	INNER JOIN T_SAL_ORDERENTRY OE ON O.FID = OE.FID
	INNER JOIN T_SAL_ORDERENTRY_F F ON OE.FENTRYID = F.FENTRYID
	INNER JOIN T_BD_MATERIAL MTL ON OE.FMATERIALID = MTL.FMATERIALID
	INNER JOIN T_BD_MATERIAL MTL2 ON MTL.FNUMBER = MTL2.FNUMBER AND MTL2.FUSEORGID = 100508
	WHERE O.FDOCUMENTSTATUS = ''A'' AND O.FDATE > SYSDATE - 1 AND F.FPRICE = 0 AND O.FSALEORGID IN(100505,979114)')

	UPDATE T SET T.FPRICE = ISNULL(AL.Price,0)
	FROM #tb T
	INNER JOIN PO_PurchaseOrder A ON T.FBILLNO = A.K3PurchaseOrder
	INNER JOIN PO_ProductList AL ON A.ID = AL.PurchaseOrderID AND AL.MaterielID = T.FMATERIALID

	DELETE FROM #tb WHERE FPRICE = 0

	UPDATE A SET FPRICE = B.FPRICE,FTAXPRICE = B.FPRICE,FTAXNETPRICE = B.FPRICE,FAMOUNT = B.FPRICE * FPRICEBASEQTY,FAMOUNT_LC = B.FPRICE * FPRICEBASEQTY,FALLAMOUNT = B.FPRICE * FPRICEBASEQTY
	FROM (SELECT * FROM OPENQUERY(ERP_ORACLE,'SELECT FENTRYID,FPRICE,FTAXPRICE,FTAXNETPRICE,FAMOUNT,FAMOUNT_LC,FALLAMOUNT,FPRICEBASEQTY FROM T_SAL_ORDERENTRY_F WHERE FENTRYID >= 1852212 AND FPRICE = 0')) AS A--要提升速度需要修改FENTRYID的值
	INNER JOIN #tb AS B ON A.FENTRYID = B.FENTRYID

	DROP TABLE #tb
END;";
        public const string _NO_P_2 = @"CREATE PROCEDURE [dbo].[DM_P_Get0Price]
AS
SET NOCOUNT ON;

SELECT B.单据编号,B.日期,B.序号,B.物料编码,B.物料名称,B.单价 K3单价,AL.Price 单价,B.FENTRYID
FROM PO_PurchaseOrder A
INNER JOIN PO_ProductList AL ON A.ID = AL.PurchaseOrderID
INNER JOIN PO_Materiel M ON AL.MaterielID = M.ERPFItemID
INNER JOIN(SELECT * FROM OPENQUERY(ERP_ORACLE,'
SELECT O.FBILLNO 单据编号,O.FDATE 日期,OE.FSEQ 序号,MTL.FNUMBER 物料编码,MTLL.FNAME 物料名称,F.FPRICE 单价,OE.FENTRYID 
FROM T_SAL_ORDER O 
INNER JOIN T_SAL_ORDERENTRY OE ON O.FID = OE.FID 
INNER JOIN T_SAL_ORDERENTRY_F F ON OE.FENTRYID = F.FENTRYID 
INNER JOIN T_BD_MATERIAL MTL ON OE.FMATERIALID = MTL.FMATERIALID 
INNER JOIN T_BD_MATERIAL_L MTLL ON MTL.FMATERIALID = MTLL.FMATERIALID AND MTLL.FLOCALEID = 2052 
WHERE O.FDOCUMENTSTATUS = ''A'' AND F.FPRICE = 0 AND O.FSALEORGID IN(100505,979114)
ORDER BY O.FBILLNO,OE.FSEQ
')) B ON A.K3PurchaseOrder = B.单据编号 AND M.FNumber = B.物料编码";
        public const string _WMS_P_1 = @"CREATE PROCEDURE [dbo].[DM_P_GetBillNo]
	@FBillType	INT,
	@BillNo		VARCHAR(50) OUTPUT
AS

DECLARE
	@FBillID INT,
	@FPreLetter VARCHAR(50) = '',
	@YearMonthDay VARCHAR(6) = SUBSTRING(CONVERT(VARCHAR(8),GETDATE(),112),3,6),
	@FCurNo VARCHAR(6) = '0001',
	@TempYMD VARCHAR(6) = ''

BEGIN TRANSACTION
	IF EXISTS (SELECT 1 FROM [DM_T_BillNo] WHERE FBillID = @FBillType)
	BEGIN
		SELECT @FPreLetter = FPreLetter,@TempYMD = YearMonthDay,@FCurNo = FCurNo FROM [DM_T_BillNo] WHERE FBillID = @FBillType
		IF @TempYMD = @YearMonthDay
		BEGIN
			SELECT @FCurNo = SUBSTRING(CONVERT(VARCHAR,CONVERT(INT,@FCurNo) + 1),3,4)
			UPDATE [DM_T_BillNo] SET FCurNo = '10' + @FCurNo WHERE FBillID = @FBillType
		END
		ELSE
		BEGIN
			SELECT @FCurNo = '0001'
			UPDATE [DM_T_BillNo] SET YearMonthDay = @YearMonthDay,FCurNo = '100001' WHERE FBillID = @FBillType
		END
	END
	ELSE
	BEGIN
		SELECT @FBillID = FBillID,@FPreLetter = ISNULL(FPreLetter,'') FROM DM_T_BillNoType WHERE FBillID = @FBillType

		INSERT INTO [DM_T_BillNo](FBillID,FPreLetter,YearMonthDay,FCurNo)
		VALUES(@FBillID,@FPreLetter,@YearMonthDay,'10' + @FCurNo)
	END

	SELECT @BillNo = @FPreLetter + @YearMonthDay + @FCurNo

	IF @@ERROR = 0
		COMMIT
	ELSE
	BEGIN
		ROLLBACK
		SELECT @BillNo = ''
	END
RETURN";
        public const string _WMS_P_2 = @"CREATE PROCEDURE[dbo].[DM_P_SynMTL]
AS

MERGE INTO t_Material AS T
USING (SELECT * FROM OPENQUERY(ERP_ORACLE,'
SELECT M.FMATERIALID,ML.FNAME,M.FNUMBER,M.FOLDNUMBER OLDNO,M.FUSEORGID,U.FUNITID UNID, M.F_PAEZ_MAJOR BIGID,A1.FNUMBER BIGNO,AL1.FDATAVALUE BIGNA,MB.FCATEGORYID MTID,
M.F_PAEZ_MEDIUM MID,A2.FNUMBER MNO,AL2.FDATAVALUE MNA,M.F_PAEZ_MINOR SMID,A3.FNUMBER SNO,AL3.FDATAVALUE SNA,M.F_PAEZ_SUBCLASS THID,M.F_PAEZ_BRAND BRID,A5.FNUMBER BRNO,AL5.FDATAVALUE BRNA,M.F_PAEZ_SERIES SEID, A6.FNUMBER SENO,AL6.FDATAVALUE SENA,
M.F_PAEZ_TRADE PRID,A7.FNUMBER PRNO,AL7.FDATAVALUE PRNA,M.F_PAEZ_CARSERIES CAID,A8.FNUMBER CANO,AL8.FDATAVALUE CANA,M.F_PAEZ_CARTYPE CTID,A9.FNUMBER CTNO,AL9.FDATAVALUE CTNA,M.F_PAEZ_COLOR COID,A10.FNUMBER CONO,AL10.FDATAVALUE CONA,M.F_PAEZ_PRICINGFACTORS PCID,A11.FNUMBER PCNO,AL11.FDATAVALUE PCNA,
M.F_PAEZ_TECHNOLOGY TCID,A12.FNUMBER TCNO,AL12.FDATAVALUE TCNA,M.F_PAEZ_LINES LID,A13.FNUMBER LNO,AL13.FDATAVALUE LNA,M.F_PAEZ_STRUCTURE STID,A14.FNUMBER STNO,AL14.FDATAVALUE STNA,M.F_PAEZ_CATEGORY CGID,A15.FNUMBER CGNO,AL15.FDATAVALUE CGNA,
M.FDOCUMENTSTATUS DSTATUS,M.FFORBIDSTATUS FSTATUS,MS.FBATCHRULEID BTID,MS.FISKFPERIOD ISQPM,MS.FEXPUNIT QPU,MS.FEXPPERIOD QP,MS.FSNCODERULE SNID,MS.FSNUNIT SNUID,MS.FSNMANAGETYPE SNMTID,MS.FSAFESTOCK SFST,M.FMODIFYDATE LSUD,ML.FSPECIFICATION MTLS,MP.FRECEIVEMAXSCALE RCMS,MP.FRECEIVEMINSCALE RCMIS,mprod.FFINISHRECEIPTOVERRATE FIOR,mprod.FFINISHRECEIPTSHORTRATE FROR,
M.F_PAEZ_AUTOCATCH FPA,A16.FNUMBER ISSN,A17.FNUMBER ISBAT,M.F_PAEZ_Place PF
FROM T_BD_MATERIAL M
INNER JOIN T_BD_MATERIAL_L ML ON M.FMATERIALID = ML.FMATERIALID AND ML.FLOCALEID = 2052 INNER JOIN T_BD_MATERIALBASE MB ON M.FMATERIALID = MB.FMATERIALID
INNER JOIN T_BD_UNIT U ON MB.FBASEUNITID = U.FUNITID
INNER JOIN T_BD_MATERIALCATEGORY MC ON MB.FCATEGORYID = MC.FCATEGORYID INNER JOIN T_BD_MATERIALSTOCK MS ON M.FMATERIALID = MS.FMATERIALID
INNER JOIN T_BD_MATERIALPURCHASE MP ON M.FMATERIALID = MP.FMATERIALID INNER JOIN t_bd_materialproduce mprod ON M.FMATERIALID = mprod.FMATERIALID
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A1 ON M.F_PAEZ_MAJOR = A1.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL1 ON A1.FENTRYID = AL1.FENTRYID AND AL1.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A2 ON M.F_PAEZ_MEDIUM = A2.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL2 ON A2.FENTRYID = AL2.FENTRYID AND AL2.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A3 ON M.F_PAEZ_MINOR = A3.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL3 ON A3.FENTRYID = AL3.FENTRYID AND AL3.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A5 ON M.F_PAEZ_BRAND = A5.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL5 ON A5.FENTRYID = AL5.FENTRYID AND AL5.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A6 ON M.F_PAEZ_SERIES = A6.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL6 ON A6.FENTRYID = AL6.FENTRYID AND AL6.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A7 ON M.F_PAEZ_TRADE = A7.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL7 ON A7.FENTRYID = AL7.FENTRYID AND AL7.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A8 ON M.F_PAEZ_CARSERIES = A8.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL8 ON A8.FENTRYID = AL8.FENTRYID AND AL8.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A9 ON M.F_PAEZ_CARTYPE = A9.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL9 ON A9.FENTRYID = AL9.FENTRYID AND AL9.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A10 ON M.F_PAEZ_COLOR = A10.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL10 ON A10.FENTRYID = AL10.FENTRYID AND AL10.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A11 ON M.F_PAEZ_PRICINGFACTORS = A11.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL11 ON A11.FENTRYID = AL11.FENTRYID AND AL11.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A12 ON M.F_PAEZ_TECHNOLOGY = A12.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL12 ON A12.FENTRYID = AL12.FENTRYID AND AL12.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A13 ON M.F_PAEZ_LINES = A13.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL13 ON A13.FENTRYID = AL13.FENTRYID AND AL13.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A14 ON M.F_PAEZ_STRUCTURE = A14.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL14 ON A14.FENTRYID = AL14.FENTRYID AND AL14.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A15 ON M.F_PAEZ_CATEGORY = A15.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL15 ON A15.FENTRYID = AL15.FENTRYID AND AL15.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A16 ON M.F_ISSNMANAGER = A16.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY A17 ON M.F_ISBATCHMANAGER = A17.FENTRYID
WHERE M.FDOCUMENTSTATUS = ''C'' AND M.FFORBIDSTATUS = ''A'' AND M.FUSEORGID = 100508 AND M.FMODIFYDATE > SYSDATE - 7')) AS O ON T.fNumber = O.FNUMBER
WHEN MATCHED THEN UPDATE SET FName = O.FNAME,fNumber = O.FNUMBER,oldNumber = O.OLDNO,dataStatus = O.DSTATUS,enabled = O.FSTATUS,userOrgId = 100508,basicUnitId = O.UNID,materialSize = O.MTLS,materialTypeid = O.MTID
    ,isQualityPeriodManager = O.ISQPM,batchRuleId = O.BTID,snRuleId = O.SNID,snUnitId = O.SNUID,snManagerTypeId = O.SNMTID,qualityPeriodUnitId = O.QPU,qualityPeriod = O.QP,safetyStock = O.SFST,lastUpdateDate = O.LSUD
	,receiveMaxScale = O.RCMS,receiveMinScale = O.RCMIS,bigSortId = O.BIGID,bigSortName = O.BIGNA,bigSortNumber = O.BIGNO,middleSortId = O.MID,middleSortName = O.MNA,middleSortNumber = O.MNO,smallSortId = O.SMID
	,smallSortName = O.SNA,smallSortNumber = O.SNO,thinSortName = O.THID,brandId = O.BRID,brandName = O.BRNA,brandNumber = O.BRNO,seriesId = O.SEID,seriesName = O.SENA,seriesNumber = O.SENO,productId = O.PRID
	,productName = O.PRNA,productNumber = O.PRNO,carSeriesId = O.CAID,carSeriesName = O.CANA,carSeriesNumber = O.CANO,carTypeId = O.CTID,carTypeName = O.CTNA,carTypeNumber = O.CTNO,colorId = O.COID,colorName = O.CONA
	,colorNumber = O.CONO,priceElementId = O.PCID,priceElementName = O.PCNA,priceElementNumber = O.PCNO,technologyId = O.TCID,technologyName = O.TCNA,technologyNumber = O.TCNO,structureId = O.STID,structureName = O.STNA
	,structureNumber = O.STNO,categoryId = O.CGID,categoryName = O.CGNA,categoryNumber = O.CGNO,linesId = O.LID,linesName = O.LNA,linesNumber = O.LNO,finishReceiptOverRate = O.FIOR,finishReceiptShortRate = O.FROR
	,isAotuBringOut = O.FPA,isSnManager = O.ISSN,isBatchManager = O.ISBAT,mtlplace = O.PF
WHEN NOT MATCHED THEN INSERT(FMATERIALID,FName,fNumber,oldNumber,dataStatus,enabled,userOrgId,basicUnitId,materialSize,materialTypeid, isQualityPeriodManager,batchRuleId,snRuleId,snUnitId,snManagerTypeId,qualityPeriodUnitId,qualityPeriod,safetyStock,lastUpdateDate,receiveMaxScale,receiveMinScale,bigSortId,bigSortNumber,bigSortName
	,middleSortId,middleSortName,middleSortNumber,smallSortId, smallSortName,smallSortNumber,thinSortName,brandId,brandName,brandNumber,seriesId,seriesName,seriesNumber,productId,productName,productNumber,carSeriesId,carSeriesName,carSeriesNumber,carTypeId,carTypeName,carTypeNumber,colorId,colorNumber,colorName
	,priceElementId,priceElementName,priceElementNumber,technologyId,technologyName,technologyNumber,structureId,structureName,structureNumber,categoryId,categoryName,categoryNumber,linesId,linesName,linesNumber,finishReceiptOverRate,finishReceiptShortRate,isAotuBringOut,isSnManager,isBatchManager,mtlplace)
VALUES(O.FMATERIALID,O.FNAME,O.FNUMBER,O.OLDNO,O.DSTATUS,O.FSTATUS,100508,O.UNID,O.MTLS,O.MTID,O.ISQPM,O.BTID,O.SNID,O.SNUID,O.SNMTID,O.QPU,O.QP,O.SFST,O.LSUD,O.RCMS,O.RCMIS,O.BIGID,O.BIGNO,O.BIGNA
	,O.MID,O.MNA,O.MNO,O.SMID,O.SNA,O.SNO,O.THID,O.BRID,O.BRNA,O.BRNO,O.SEID,O.SENA,O.SENO,O.PRID,O.PRNA,O.PRNO,O.CAID,O.CANA,O.CANO,O.CTID,O.CTNA,O.CTNO,O.COID,O.CONO,O.CONA
	,O.PCID,O.PCNA,O.PCNO,O.TCID,O.TCNA,O.TCNO,O.STID,O.STNA,O.STNO,O.CGID,O.CGNA,O.CGNO,O.LID,O.LNA,O.LNO,O.FIOR,O.FROR,O.FPA,O.ISSN,O.ISBAT,O.PF);
GO";
        public const string _WMS_P_3 = @"CREATE PROCEDURE[dbo].[DM_P_SynMTLByNumber]
@FNumber VARCHAR(50)
AS

DECLARE	@Str VARCHAR(MAX)

SELECT @Str = 'MERGE INTO t_Material T USING (SELECT * FROM OPENQUERY(ERP_ORACLE,''
SELECT M.FMATERIALID,ML.FNAME,M.FNUMBER,M.FOLDNUMBER OLDNO,M.FUSEORGID,U.FUNITID UNID,M.F_PAEZ_MAJOR BIGID,A1.FNUMBER BIGNO,AL1.FDATAVALUE BIGNA,MB.FCATEGORYID MTID,M.F_PAEZ_MEDIUM MID,A2.FNUMBER MNO,AL2.FDATAVALUE MNA,M.F_PAEZ_MINOR SMID,A3.FNUMBER SNO,AL3.FDATAVALUE SNA,M.F_PAEZ_SUBCLASS THID,M.F_PAEZ_BRAND BRID,A5.FNUMBER BRNO,AL5.FDATAVALUE BRNA,M.F_PAEZ_SERIES SEID,A6.FNUMBER SENO,AL6.FDATAVALUE SENA,M.F_PAEZ_TRADE PRID,A7.FNUMBER PRNO,AL7.FDATAVALUE PRNA,M.F_PAEZ_CARSERIES CAID,A8.FNUMBER CANO,AL8.FDATAVALUE CANA,M.F_PAEZ_CARTYPE CTID,A9.FNUMBER CTNO,AL9.FDATAVALUE CTNA,M.F_PAEZ_COLOR COID,A10.FNUMBER CONO,AL10.FDATAVALUE CONA,M.F_PAEZ_PRICINGFACTORS PCID,A11.FNUMBER PCNO,AL11.FDATAVALUE PCNA,M.F_PAEZ_TECHNOLOGY TCID,A12.FNUMBER TCNO,AL12.FDATAVALUE TCNA,M.F_PAEZ_LINES LID,A13.FNUMBER LNO,AL13.FDATAVALUE LNA,M.F_PAEZ_STRUCTURE STID,A14.FNUMBER STNO,AL14.FDATAVALUE STNA,M.F_PAEZ_CATEGORY CGID,A15.FNUMBER CGNO,AL15.FDATAVALUE CGNA,M.FDOCUMENTSTATUS DSTATUS,M.FFORBIDSTATUS FSTATUS,MS.FBATCHRULEID BTID,MS.FISKFPERIOD ISQPM,MS.FEXPUNIT QPU,MS.FEXPPERIOD QP,MS.FSNCODERULE SNID,MS.FSNUNIT SNUID,MS.FSNMANAGETYPE SNMTID,MS.FSAFESTOCK SFST,M.FMODIFYDATE LSUD,ML.FSPECIFICATION MTLS,MP.FRECEIVEMAXSCALE RCMS,MP.FRECEIVEMINSCALE RCMIS,MPD.FFINISHRECEIPTOVERRATE FIOR,MPD.FFINISHRECEIPTSHORTRATE FROR,M.F_PAEZ_AUTOCATCH FPA,A16.FNUMBER ISSN,A17.FNUMBER ISBAT,M.F_PAEZ_Place PF
FROM T_BD_MATERIAL M
INNER JOIN T_BD_MATERIAL_L ML ON M.FMATERIALID = ML.FMATERIALID AND ML.FLOCALEID = 2052 INNER JOIN T_BD_MATERIALBASE MB ON M.FMATERIALID = MB.FMATERIALID
INNER JOIN T_BD_UNIT U ON MB.FBASEUNITID = U.FUNITID
INNER JOIN T_BD_MATERIALCATEGORY MC ON MB.FCATEGORYID = MC.FCATEGORYID INNER JOIN T_BD_MATERIALSTOCK MS ON M.FMATERIALID = MS.FMATERIALID
INNER JOIN T_BD_MATERIALPURCHASE MP ON M.FMATERIALID = MP.FMATERIALID INNER JOIN t_bd_materialproduce MPD ON M.FMATERIALID = MPD.FMATERIALID
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A1 ON M.F_PAEZ_MAJOR = A1.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL1 ON A1.FENTRYID = AL1.FENTRYID AND AL1.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A2 ON M.F_PAEZ_MEDIUM = A2.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL2 ON A2.FENTRYID = AL2.FENTRYID AND AL2.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A3 ON M.F_PAEZ_MINOR = A3.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL3 ON A3.FENTRYID = AL3.FENTRYID AND AL3.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A5 ON M.F_PAEZ_BRAND = A5.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL5 ON A5.FENTRYID = AL5.FENTRYID AND AL5.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A6 ON M.F_PAEZ_SERIES = A6.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL6 ON A6.FENTRYID = AL6.FENTRYID AND AL6.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A7 ON M.F_PAEZ_TRADE = A7.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL7 ON A7.FENTRYID = AL7.FENTRYID AND AL7.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A8 ON M.F_PAEZ_CARSERIES = A8.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL8 ON A8.FENTRYID = AL8.FENTRYID AND AL8.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A9 ON M.F_PAEZ_CARTYPE = A9.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL9 ON A9.FENTRYID = AL9.FENTRYID AND AL9.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A10 ON M.F_PAEZ_COLOR = A10.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL10 ON A10.FENTRYID = AL10.FENTRYID AND AL10.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A11 ON M.F_PAEZ_PRICINGFACTORS = A11.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL11 ON A11.FENTRYID = AL11.FENTRYID AND AL11.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A12 ON M.F_PAEZ_TECHNOLOGY = A12.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL12 ON A12.FENTRYID = AL12.FENTRYID AND AL12.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A13 ON M.F_PAEZ_LINES = A13.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL13 ON A13.FENTRYID = AL13.FENTRYID AND AL13.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A14 ON M.F_PAEZ_STRUCTURE = A14.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL14 ON A14.FENTRYID = AL14.FENTRYID AND AL14.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A15 ON M.F_PAEZ_CATEGORY = A15.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY_L AL15 ON A15.FENTRYID = AL15.FENTRYID AND AL15.FLOCALEID = 2052
LEFT JOIN T_BAS_ASSISTANTDATAENTRY A16 ON M.F_ISSNMANAGER = A16.FENTRYID LEFT JOIN T_BAS_ASSISTANTDATAENTRY A17 ON M.F_ISBATCHMANAGER = A17.FENTRYID
WHERE M.FDOCUMENTSTATUS = ''''C'''' AND M.FFORBIDSTATUS = ''''A'''' AND M.FUSEORGID = 100508 and M.fnumber = ''''' + @FNumber  + ''''''')) O ON T.fNumber = O.FNUMBER'

SELECT @Str = @Str + '
WHEN MATCHED THEN UPDATE SET FName = O.FNAME,fNumber = O.FNUMBER,oldNumber = O.OLDNO,dataStatus = O.DSTATUS,enabled = O.FSTATUS,userOrgId = 100508,basicUnitId = O.UNID,materialSize = O.MTLS,materialTypeid = O.MTID
    ,isQualityPeriodManager = O.ISQPM,batchRuleId = O.BTID,snRuleId = O.SNID,snUnitId = O.SNUID,snManagerTypeId = O.SNMTID,qualityPeriodUnitId = O.QPU,qualityPeriod = O.QP,safetyStock = O.SFST,lastUpdateDate = O.LSUD,receiveMaxScale = O.RCMS,receiveMinScale = O.RCMIS,bigSortId = O.BIGID,bigSortName = O.BIGNA,bigSortNumber = O.BIGNO
    ,middleSortId = O.MID,middleSortName = O.MNA,middleSortNumber = O.MNO,smallSortId = O.SMID,smallSortName = O.SNA,smallSortNumber = O.SNO,thinSortName = O.THID,brandId = O.BRID,brandName = O.BRNA,brandNumber = O.BRNO,seriesId = O.SEID,seriesName = O.SENA,seriesNumber = O.SENO,productId = O.PRID,productName = O.PRNA,productNumber = O.PRNO,carSeriesId = O.CAID,carSeriesName = O.CANA,carSeriesNumber = O.CANO,carTypeId = O.CTID,carTypeName = O.CTNA,carTypeNumber = O.CTNO
    ,colorId = O.COID,colorName = O.CONA,colorNumber = O.CONO,priceElementId = O.PCID,priceElementName = O.PCNA,priceElementNumber = O.PCNO,technologyId = O.TCID,technologyName = O.TCNA,technologyNumber = O.TCNO,structureId = O.STID,structureName = O.STNA,structureNumber = O.STNO,categoryId = O.CGID,categoryName = O.CGNA,categoryNumber = O.CGNO,linesId = O.LID,linesName = O.LNA,linesNumber = O.LNO,finishReceiptOverRate = O.FIOR,finishReceiptShortRate = O.FROR,isAotuBringOut = O.FPA,isSnManager = O.ISSN,isBatchManager = O.ISBAT,mtlplace = O.PF
WHEN NOT MATCHED THEN INSERT(FMATERIALID,FName,fNumber,oldNumber,dataStatus,enabled,userOrgId,basicUnitId,materialSize,materialTypeid, isQualityPeriodManager,batchRuleId,snRuleId,snUnitId,snManagerTypeId,qualityPeriodUnitId,qualityPeriod,safetyStock,lastUpdateDate,receiveMaxScale,receiveMinScale,bigSortId,bigSortName,bigSortNumber
	,middleSortId,middleSortName,middleSortNumber,smallSortId, smallSortName,smallSortNumber,thinSortName,brandId,brandName,brandNumber,seriesId,seriesName,seriesNumber,productId,productName,productNumber,carSeriesId,carSeriesName,carSeriesNumber,carTypeId,carTypeName,carTypeNumber,colorId,colorName,colorNumber
	,priceElementId,priceElementName,priceElementNumber,technologyId,technologyName,technologyNumber,structureId,structureName,structureNumber,categoryId,categoryName,categoryNumber,linesId,linesName,linesNumber,finishReceiptOverRate,finishReceiptShortRate,isAotuBringOut,isSnManager,isBatchManager,mtlplace)
VALUES(O.FMATERIALID,O.FNAME,O.FNUMBER,O.OLDNO,O.DSTATUS,O.FSTATUS,100508,O.UNID,O.MTLS,O.MTID,O.ISQPM,O.BTID,O.SNID,O.SNUID,O.SNMTID,O.QPU,O.QP,O.SFST,O.LSUD,O.RCMS,O.RCMIS,O.BIGID,O.BIGNA,O.BIGNO,
	O.MID,O.MNA,O.MNO,O.SMID,O.SNA,O.SNO,O.THID,O.BRID,O.BRNA,O.BRNO,O.SEID,O.SENA,O.SENO,O.PRID,O.PRNA,O.PRNO,O.CAID,O.CANA,O.CANO,O.CTID,O.CTNA,O.CTNO,O.COID,O.CONA,O.CONO
	,O.PCID,O.PCNA,O.PCNO,O.TCID,O.TCNA,O.TCNO,O.STID,O.STNA,O.STNO,O.CGID,O.CGNA,O.CGNO,O.LID,O.LNA,O.LNO,O.FIOR,O.FROR,O.FPA,O.ISSN,O.ISBAT,O.PF);';
	
SELECT @Str";
        public const string _WMS_P_4 = @"CREATE PROCEDURE [dbo].[DM_P_SynTransferOutByBillNo]
@BillNo VARCHAR(30)
AS
DECLARE @FID INT,@SFID INT
--DECLARE @BillNo VARCHAR(30)
BEGIN TRAN
	--SELECT @BillNo = 'ZJDBD200103000' + CONVERT(VARCHAR,@BillSN)
	SELECT @SFID = id FROM [OldWMS].[cbwms].[dbo].[t_StkTransferOut] WHERE billNo  = @BillNo

	IF @SFID IS NULL OR @SFID = NULL
	COMMIT

	INSERT INTO [t_StkTransferOut]([billNo],[transferDirect],[bizType],[outOrgID],[outOrgNumber],[outOrgName],[inOrgId],[inOrgNumber],[inOrgName],[billDate],[stockManagerId],[stockManagerNumber],[stockManagerName],[transferBizType],[settleOrgId],[settleOrgNumber],[settleOrgName],[saleOrgId],[saleOrgNumber],[saleOrgName],[pickType],[pickDepartId],[pickDepartNumber],[pickDepartName],[ownerTypeIn],[ownerInId],[ownerInNumber],[ownerInName],[ownerTypeOut],[ownerOutId],[ownerOutNumber],[ownerOutName],[billStatus],[closeStatus],[businessType],[closeDateTime],[closerName],[fbillTypeNumber],[isVMI])
	SELECT [billNo],[transferDirect],[bizType],[outOrgID],[outOrgNumber],[outOrgName],[inOrgId],[inOrgNumber],[inOrgName],[billDate],[stockManagerId],[stockManagerNumber],[stockManagerName],[transferBizType],[settleOrgId],[settleOrgNumber],[settleOrgName],[saleOrgId],[saleOrgNumber],[saleOrgName],[pickType],[pickDepartId],[pickDepartNumber],[pickDepartName],[ownerTypeIn],[ownerInId],[ownerInNumber],[ownerInName],[ownerTypeOut],[ownerOutId],[ownerOutNumber],[ownerOutName],[billStatus],[closeStatus],[businessType],[closeDateTime],[closerName],[fbillTypeNumber],[isVMI] 
	FROM [OldWMS].[cbwms].[dbo].[t_StkTransferOut]
	WHERE billNo  = @BillNo

	SELECT @FID = id FROM [t_StkTransferOut] WHERE billNo = @BillNo

	IF @FID IS NULL OR @FID = NULL
	ROLLBACK

	INSERT INTO [t_StkTransferOutEntry]([stkBillId],[mtlId],[mtlFnumber],[mtlFname],[inStockId],[inStockNumber],[inStockName],[inStockPositionId],[inStockPositionNumber],[inStockPositionName],[outStockId],[outStockNumber],[outStockName],[outStockPositionId],[outStockPositionNumber],[outStockPositionName],[unitId],[unitFumber],[unitFname],[outStockStatusId],[outStockStatusNumber],[outStockStatusName],[inStockStatusId],[inStockStatusNumber],[inStockStatusName],[fqty],[pickFqty],[batchCode],[snCode],[barcode],[FPRODUCTIONSEQ],[FMONote],[needFqty],[entryStatus],[entryCloseDateTime],[orderNo],[orderId],[orderEntryId],[entryCloserName],[oldMtlId],[oldMtlNumber],[oldMtlName],[orderDate],[deliveryWayName],[brandName],[seriesName],[productName],[carSeriesName],[carTypeName],[colorName],[lockQty],[deliveryQty],[custNumber],[custName],[applicationQty],[entrySrc],[createCodeStatus],[cause],[passQty],[entryPassStatus],[parentId])
	SELECT @FID,[mtlId],[mtlFnumber],[mtlFname],[inStockId],[inStockNumber],[inStockName],[inStockPositionId],[inStockPositionNumber],[inStockPositionName],[outStockId],[outStockNumber],[outStockName],[outStockPositionId],[outStockPositionNumber],[outStockPositionName],[unitId],[unitFumber],[unitFname],[outStockStatusId],[outStockStatusNumber],[outStockStatusName],[inStockStatusId],[inStockStatusNumber],[inStockStatusName],[fqty],[pickFqty],[batchCode],[snCode],[barcode],[FPRODUCTIONSEQ],[FMONote],[needFqty],[entryStatus],[entryCloseDateTime],[orderNo],[orderId],[orderEntryId],[entryCloserName],[oldMtlId],[oldMtlNumber],[oldMtlName],[orderDate],[deliveryWayName],[brandName],[seriesName],[productName],[carSeriesName],[carTypeName],[colorName],[lockQty],[deliveryQty],[custNumber],[custName],[applicationQty],[entrySrc],[createCodeStatus],[cause],[passQty],[entryPassStatus],[parentId]
	FROM [OldWMS].[cbwms].[dbo].[t_StkTransferOutEntry]
	WHERE stkBillId  = @SFID

	/*
	DECLARE @ic INT
	BEGIN TRAN
		SELECT @ic = 17
		WHILE @ic <= 99
		BEGIN
			EXEC 'DM_P_SynWMS' @ic
			SELECT @ic = @ic + 1
		END
	COMMIT
	*/
COMMIT;";
        #endregion
    }
}

